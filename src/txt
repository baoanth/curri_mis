DELIMITER //

CREATE TRIGGER update_final_score_after_assessment_delete
AFTER DELETE ON assessments
FOR EACH ROW
BEGIN
  DECLARE scoreExists INT;
  DECLARE totalSum DOUBLE;
  DECLARE countAssessments INT;

  -- Xác định có bất kỳ bản ghi nào còn lại với cùng meta_assessment_id có totalScore = 0
  SELECT COUNT(*)
  INTO scoreExists
  FROM assessments
  WHERE meta_assessment_id = OLD.meta_assessment_id
    AND totalScore = 0
    AND isDelete = 0;

  -- Nếu có ít nhất một bản ghi có totalScore = 0
  IF scoreExists > 0 THEN
    -- Cập nhật FinalScore thành 0
    UPDATE meta_assessments
    SET FinalScore = 0
    WHERE meta_assessment_id = OLD.meta_assessment_id;
  ELSE
    -- Tính tổng totalScore
    SELECT COALESCE(SUM(totalScore), 0)
    INTO totalSum
    FROM assessments
    WHERE meta_assessment_id = OLD.meta_assessment_id
      AND isDelete = 0;

    -- Tính số lượng bản ghi còn lại
    SELECT COUNT(*)
    INTO countAssessments
    FROM assessments
    WHERE meta_assessment_id = OLD.meta_assessment_id
      AND isDelete = 0;

    -- Nếu có ít nhất một bản ghi hợp lệ, cập nhật FinalScore
    IF countAssessments > 0 THEN
      UPDATE meta_assessments
      SET FinalScore = totalSum / countAssessments
      WHERE meta_assessment_id = OLD.meta_assessment_id;
    ELSE
      -- Nếu không còn bản ghi nào, cập nhật FinalScore thành 0
      UPDATE meta_assessments
      SET FinalScore = 0
      WHERE meta_assessment_id = OLD.meta_assessment_id;
    END IF;
  END IF;
END //

DELIMITER ;
